name: Build and test

# Avoid duplicate builds for pull requests, allow manual trigger.
on:
  push:
    branches:
      - main
  pull_request:
  workflow_dispatch:

defaults:
  run:
    shell: bash

jobs:
  generator:
    runs-on: ubuntu-22.04
    container:
      image: dart:2.18.5
    steps:
      - uses: actions/checkout@v3
      - name: Install ObjectBox C-API
        run: ./install.sh
      - name: Integration test
        run: ./generator/test.sh

  # make sure the init script doesn't stop working - it's not something we usually run during normal development
  init-script:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: 3.3.9
          cache: true
      - run: ./tool/init.sh

  lib:
    strategy:
      fail-fast: false # To see all Dart SDKs that fail, also sometimes with more helpful errors.
      matrix:
        os:
          - windows-2022
          - macos-11
          - ubuntu-22.04
        sdk:
          # Always include lowest supported version (see sdk key in objectbox and generator
          # pubspec.yaml, but may be higher due to dependencies).
          - 2.18.5
          - 2.17.6
    runs-on: ${{ matrix.os }}
    steps:
      - uses: dart-lang/setup-dart@v1
        with:
          sdk: ${{ matrix.sdk }}
      - uses: actions/checkout@v3
      - name: Generator Test
        working-directory: generator
        run: |
          ../tool/pub.sh get
          ../tool/pub.sh run test
      - name: Install ObjectBox C-API
        working-directory: objectbox
        run: ../install.sh
      - name: Library Test
        working-directory: objectbox
        run: |
          ../tool/pub.sh get
          ../tool/pub.sh run build_runner build
          ../tool/pub.sh run test

# Temporarily disabled, see internal issue.
#  valgrind:
#    runs-on: ubuntu-22.04
#    steps:
#      - uses: dart-lang/setup-dart@v1
#        with:
#          sdk: 2.18.5
#      - uses: actions/checkout@v3
#      - name: Install ObjectBox C-API
#        run: ./install.sh
#      - name: Install Valgrind
#        run: ./tool/apt-install.sh valgrind
#      - name: Test
#        working-directory: objectbox
#        # let tests know we want a faster/shorter version, if available (to prevent timeouts in CI)
#        env:
#          TEST_SHORT: 1
#        run: |
#          ../tool/pub.sh get
#          ../tool/pub.sh run build_runner build
#          ./tool/valgrind.sh

  flutter-integration-test:
    strategy:
      fail-fast: false
      matrix:
        os:
          - macos-12
          - ubuntu-22.04
          - windows-2022 # Flutter 2.9 and newer need Visual Studio 2022 to build desktop.
        flutter-version:
          # Always include lowest supported version (based on lowest tested Dart SDK, see lib tests
          # above): https://docs.flutter.dev/development/tools/sdk/releases lists included Dart SDK.
          - 3.3.9
          - 3.0.5
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ matrix.flutter-version }}
          cache: true
      # macos-13 and windows-2022 default to Java 8, but Android Plugin requires 11.
      - uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '11'
      - run: echo $PATH
      - run: flutter --version
      # https://docs.flutter.dev/desktop#additional-linux-requirements
      - if: ${{ startsWith(matrix.os, 'ubuntu') }}
        run: ./tool/apt-install.sh ninja-build pkg-config libgtk-3-dev
      - run: make integration-test
        working-directory: objectbox
