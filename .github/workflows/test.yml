name: Test

# Avoid duplicate builds for pull requests, allow manual trigger.
on:
  push:
    branches:
      - main
  pull_request:
  workflow_dispatch:

# Minimal access by default
permissions:
  contents: read

defaults:
  run:
    shell: bash

env:
  # Run generator integration tests and init script with latest SDK.
  # Pick a concrete version instead of "latest" to avoid builds breaking due to changes in new SDKs.
  # NOTE: also update matrix configurations below!
  FLUTTER_VERSION: 3.35.2 # Available versions: https://docs.flutter.dev/release/archive
  DART_VERSION: 3.9.2 # Available versions: https://dart.dev/get-dart/archive

jobs:

  # Runs generator integration tests, e.g. ensures generator works as expected.
  # Note: no need to test oldest SDK here, generator package is also built as part of unit-tests job.
  generator-integ-tests:
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      # Prefer running on Ubuntu over Dart Docker image
      - uses: dart-lang/setup-dart@e51d8e571e22473a2ddebf0ef8a2123f0ab2c02c # v1.7.1
        with:
          sdk: ${{ env.DART_VERSION }}
      - name: Install ObjectBox C library
        run: ./install.sh --install # Install globally for generator integration tests
      - name: Integration test
        run: ./generator/test.sh

  # Check the init script works - it's not something we usually run during normal development.
  # The init script gets dependencies for all packages and runs code generation for those that
  # need it.
  init-script:
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      - uses: subosito/flutter-action@fd55f4c5af5b953cc57a2be44cb082c8f6635e8e # v2.21.0
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          cache: true
      - run: ./tool/init.sh

  # Runs generator and objectbox unit tests
  unit-tests:
    strategy:
      fail-fast: false # To see all Dart SDKs that fail, also sometimes with more helpful errors.
      matrix:
        os:
          - windows-2022
          - macos-14
          - ubuntu-24.04
        sdk:
          # Test latest available and lowest supported SDK (see dev-doc/updating-dart-flutter-and-dependencies.md).
          # Pick a concrete version instead of "latest" to avoid builds breaking due to changes in new SDKs.
          # Can not use env variables here, only within 'steps'.
          # For available versions see https://dart.dev/get-dart/archive
          - 3.9.2
          - 3.7.2 # Use latest bugfix release to get tooling fixes
    runs-on: ${{ matrix.os }}
    steps:
      - uses: dart-lang/setup-dart@e51d8e571e22473a2ddebf0ef8a2123f0ab2c02c # v1.7.1
        with:
          sdk: ${{ matrix.sdk }}
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      - name: Generator Test
        working-directory: generator
        run: |
          ../tool/pub.sh get
          ../tool/pub.sh run test
      - name: Install ObjectBox C library
        working-directory: objectbox_test
        # Use Sync-enabled library to at least partially run sync_test.dart
        run: ../install.sh --sync
      - name: Library Test
        working-directory: objectbox_test
        # Set concurrency=1 to run only one test suite (== test file) at a time to make it easier to
        # attribute native logs. Note that on GitHub Actions this currently makes no difference as
        # Dart defaults to concurrency=1.
        # Run again with OBX_IN_MEMORY=true using in-memory database.
        run: |
          ../tool/pub.sh get
          ../tool/pub.sh run build_runner build
          ../tool/pub.sh run test --concurrency=1
          export OBX_IN_MEMORY=true
          ../tool/pub.sh run test --concurrency=1

  # Builds a mobile and a desktop release of the main Flutter examples
  flutter-examples:
    strategy:
      fail-fast: false
      matrix:
        os:
          - macos-14
          - ubuntu-24.04
          - windows-2022 # Flutter 2.9 and newer need Visual Studio 2022 to build for desktop
        flutter-version:
          # Test latest available and lowest supported SDK (see dev-doc/updating-dart-flutter-and-dependencies.md).
          # Pick a concrete version instead of "latest" to avoid builds breaking due to changes in new SDKs.
          # Can not use env variables here, only within 'steps'.
          # For available versions see https://docs.flutter.dev/release/archive
          # NOTE Also update versions for Ubuntu below!
          - 3.35.2
          - 3.29.3 # Use latest bugfix release to get tooling fixes
        include:
          # Test building for Android with highest supported JDK on latest Flutter SDK,
          # lowest supported JDK on lowest supported Flutter SDK. (Android is only built if a Linux
          # OS is detected, see integration-test.sh)
          - os: ubuntu-24.04
            flutter-version: 3.35.2
            jdk: 21
          - os: ubuntu-24.04
            flutter-version: 3.29.3 # Use latest bugfix release to get tooling fixes
            jdk: 17
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      - uses: subosito/flutter-action@fd55f4c5af5b953cc57a2be44cb082c8f6635e8e # v2.21.0
        with:
          flutter-version: ${{ matrix.flutter-version }}
          cache: true
      - if: ${{ matrix.jdk }}
        uses: actions/setup-java@dded0888837ed1f317902acf8a20df0ad188d165 # v5.0.0
        with:
          distribution: 'temurin'
          java-version: ${{ matrix.jdk }}
      - run: echo $PATH
      - run: flutter --version
      # https://docs.flutter.dev/desktop#additional-linux-requirements
      - if: ${{ startsWith(matrix.os, 'ubuntu') }}
        run: ./tool/apt-install.sh ninja-build pkg-config libgtk-3-dev
      - run: make integration-test
        working-directory: objectbox
