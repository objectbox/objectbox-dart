// **************************************************************************
// EntityGenerator
// **************************************************************************

Map<int, ModelEntity> _allOBXModelEntities;

void _loadOBXModelEntities() {
  _allOBXModelEntities = {};
  ModelInfo modelInfo = ModelInfo.fromMap({
    "_note1":
        "KEEP THIS FILE! Check it into a version control system (VCS) like git.",
    "_note2":
        "ObjectBox manages crucial IDs for your object model. See docs for details.",
    "_note3":
        "If you have VCS merge conflicts, you must resolve them according to ObjectBox docs.",
    "entities": [
      {
        "id": "1:1234",
        "lastPropertyId": "2:4321",
        "name": "SingleEntity",
        "properties": [
          {"id": "1:5678", "name": "id", "type": 6, "flags": 1},
          {"id": "2:4321", "name": "texta", "type": 9}
        ]
      }
    ],
    "lastEntityId": "1:1234",
    "lastIndexId": "0:0",
    "lastRelationId": "0:0",
    "lastSequenceId": "0:0",
    "modelVersion": 5,
    "modelVersionParserMinimum": 5,
    "retiredEntityUids": [],
    "retiredIndexUids": [],
    "retiredPropertyUids": [],
    "retiredRelationUids": [],
    "version": 1
  });
  modelInfo.entities.forEach((e) => _allOBXModelEntities[e.id.uid] = e);
}

ModelEntity _getOBXModelEntity(int entityUid) {
  if (_allOBXModelEntities == null) _loadOBXModelEntities();
  if (!_allOBXModelEntities.containsKey(entityUid)) {
    throw Exception("entity uid missing in objectbox-model.json: $entityUid");
  }
  return _allOBXModelEntities[entityUid];
}

ModelEntity _SingleEntity_OBXModelGetter() {
  return _getOBXModelEntity(1234);
}

SingleEntity _SingleEntity_OBXBuilder(Map<String, dynamic> members) {
  SingleEntity r = SingleEntity();
  r.id = members["id"];
  r.texta = members["texta"];
  return r;
}

Map<String, dynamic> _SingleEntity_OBXReader(SingleEntity inst) {
  Map<String, dynamic> r = {};
  r["id"] = inst.id;
  r["texta"] = inst.texta;
  return r;
}

const SingleEntity_OBXDefs = EntityDefinition<SingleEntity>(
    _SingleEntity_OBXModelGetter,
    _SingleEntity_OBXReader,
    _SingleEntity_OBXBuilder);

class SingleEntity_ {
  static final id =
      QueryIntegerProperty(entityId: 1, propertyId: 1, obxType: 6);
  static final texta =
      QueryStringProperty(entityId: 1, propertyId: 2, obxType: 9);
}
