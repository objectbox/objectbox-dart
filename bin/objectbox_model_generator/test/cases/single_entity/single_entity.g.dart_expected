// **************************************************************************
// EntityGenerator
// **************************************************************************

Map<int, ModelEntity> _allOBXModelEntities;

void _loadOBXModelEntities() {
  if (FileSystemEntity.typeSync("objectbox-model.json") ==
      FileSystemEntityType.notFound)
    throw Exception("objectbox-model.json not found");

  _allOBXModelEntities = {};
  ModelInfo modelInfo = ModelInfo.fromMap(
      json.decode(new File("objectbox-model.json").readAsStringSync()));
  modelInfo.entities.forEach((e) => _allOBXModelEntities[e.id.uid] = e);
}

ModelEntity _getOBXModelEntity(int entityUid) {
  if (_allOBXModelEntities == null) _loadOBXModelEntities();
  if (!_allOBXModelEntities.containsKey(entityUid))
    throw Exception("entity uid missing in objectbox-model.json: $entityUid");
  return _allOBXModelEntities[entityUid];
}

ModelEntity _SingleEntity_OBXModelGetter() {
  return _getOBXModelEntity(1234);
}

SingleEntity _SingleEntity_OBXBuilder(Map<String, dynamic> members) {
  SingleEntity r = new SingleEntity();
  r.id = members["id"];
  r.texta = members["texta"];
  return r;
}

Map<String, dynamic> _SingleEntity_OBXReader(SingleEntity inst) {
  Map<String, dynamic> r = {};
  r["id"] = inst.id;
  r["texta"] = inst.texta;
  return r;
}

const SingleEntity_OBXDefs = EntityDefinition<SingleEntity>(
    _SingleEntity_OBXModelGetter,
    _SingleEntity_OBXReader,
    _SingleEntity_OBXBuilder);
